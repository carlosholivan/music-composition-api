on:
    push:
      branches:
        - master
    pull_request:
      branches:
        - master
  
#set environment variables 
env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  APP_NAME: ${{ 'music-composition-api' }}
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository.
      - name: Checkout
        uses: actions/checkout@v1
      # Get coverage
      - name: Install Conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          add-pip-as-python-dependency: true
          auto-activate-base: false
          activate-environment: test
          channel-priority: ${{ matrix.channel-priority }}
          environment-file: ${{ matrix.envfile }}
          use-only-tar-bz2: true

      - name: Conda info
        shell: bash -l {0}
        run: |
            conda info -a
            conda list

      - name: Install music-composition-api
        shell: bash -l {0}
        run: cd..
        run: python -m pip install -e .[tests]

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          directory: ./coverage/reports/
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    steps:

    # Clone the repository
    - name: Checkout
      uses: actions/checkout@v1

    # Build Docker image
    - name: Docker build
      run: docker login --username=$HEROKU_EMAIL --password=$HEROKU_API_KEY registry.heroku.com
  
    # Push the Docker image to Heroku Container Registry
    - name: Publish
      run: |
        heroku container:push web -a $APP_NAME
        heroku container:release web -a $APP_NAME

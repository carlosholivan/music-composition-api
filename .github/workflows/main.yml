on:
    push:
      branches:
        - master
    pull_request:
      branches:
        - master
  
#set environment variables 
env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  APP_NAME: ${{ 'music-composition-api' }}
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository.
      - name: Checkout
        uses: actions/checkout@v1
      # Get coverage
      - name: Generate coverage report
        run: |
          pip install pytest
          pip install pytest-cov
          pytest --cov=./ --cov-report=xml
        # Upload action to codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with: 
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage1.xml,./coverage2.xml
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    steps:

    # Clone the repository
    - name: Checkout
      uses: actions/checkout@v1

    # Build Docker image
    - name: Docker build
      run: docker login --username=$HEROKU_EMAIL --password=$HEROKU_API_KEY registry.heroku.com
  
    # Push the Docker image to Heroku Container Registry
    - name: Publish
      run: |
        heroku container:push web -a $APP_NAME
        heroku container:release web -a $APP_NAME
